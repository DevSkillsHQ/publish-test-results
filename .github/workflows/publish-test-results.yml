name: Publish test results to Alva
on:
  workflow_call:

jobs:
  tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
        # Environment setup
      - name: Install Java 17
        uses: actions/setup-java@v2
        with:
         distribution: 'adopt'
         java-version: '17'  
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      
      # Backend-specific config goes below
      - name: Update host
        run: "sed 's/host.docker.internal/localhost/g' cypress.json > cypress.json.tmp && mv cypress.json.tmp cypress.json"
      - name: Fetch apiUrl
        run: echo ::set-output name=apiUrl::$(jq -r .env.apiUrl cypress.json)/ping
        id: fetchApiUrl

      # Setting up the required test reporter for test results so we can parse them
      - name: Ensure mochawesome
        run: 'jq -r ".[\"devDependencies\"] |= (.mochawesome = \"^6.2.2\")" package.json > package.json.tmp && mv package.json.tmp package.json'
      - name: Install deps
        run: npm install
      - name: Update test reporter
        run: 'jq -M ". + {\"reporter\": \"mochawesome\", \"reporterOptions\": { \"reportDir\": \"cypress/results\", \"overwrite\": false, \"html\": false, \"json\": true }}" cypress.json > cypress.json.tmp && mv cypress.json.tmp cypress.json'
      
      # Running tests for all challenges except Backend.
      - name: Run tests without waiting on API
        if: steps.fetchApiUrl.outputs.apiUrl == ''
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm run start
          
      # Running tests for Backend challenges. Waiting on API is required.    
      - name: Run tests with waiting on API
        if: steps.fetchApiUrl.outputs.apiUrl != ''
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm run start
          wait-on: ${{ steps.fetchApiUrl.outputs.apiUrl }}
      
      # Preparing test results before sending to Alva
      - name: Fetch test results
        if: always()
        run: "echo ::set-output name=results::$(jq -r '[.results[].suites[].tests[] | {test: .title, result: .state}]' cypress/results/mochawesome.json)"
        id: fetchTestResults
      - name: Set repo env var
        if: always()
        run: echo "github_repo=$GITHUB_REPOSITORY" >> $GITHUB_ENV
      
      # Publishing test results to Alva with a re-try.
      - name: Publish test results with retries
        if: always()
        run: |
          retry=0
          max_retries=3
          sleep_time=5  # seconds
          status=1  # any non-zero value
          while [[ "$status" -ne 0 && "$retry" -lt "$max_retries" ]]; do
            echo "Attempt: $((retry+1))"
            curl -s -o /dev/null -w "%{http_code}" \
              -X POST \
              -H "Content-Type: application/json" \
              -d '{"assignmentRepository": "${{ env.github_repo }}","results": [${{ steps.fetchTestResults.outputs.results }}]}' \
              ${{ vars.AUTO_SCORE_WEBHOOK_URL }}
            status=$?
            if [[ "$status" -ne 0 ]]; then
              echo "Attempt $((retry+1)) failed. Retrying in $sleep_time seconds..."
              sleep "$sleep_time"
            fi
            retry=$((retry+1))
          done
          if [[ "$status" -ne 0 ]]; then
            echo "All attempts failed after $max_retries retries."
            exit 1
          fi
